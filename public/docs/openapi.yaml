openapi: 3.0.3
info:
  title: 'Laravel API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000/api/v1'
paths:
  /api/v1/login:
    post:
      summary: 'Request auth token'
      operationId: requestAuthToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'valid email.'
                  example: test@example.com
                password:
                  type: string
                  description: 'secured password.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/v1/user:
    get:
      summary: 'Get authenticated user.'
      operationId: getAuthenticatedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/v1/logout:
    post:
      summary: 'Destroy auth token.'
      operationId: destroyAuthToken
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Authentication
  /api/v1/examinations:
    get:
      summary: 'Get all examinations'
      operationId: getAllExaminations
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Examinations
    post:
      summary: 'Create examination'
      operationId: createExamination
      description: 'Allows teachers to create examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xdgf
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Ratione magni libero quia sequi ipsum quidem voluptatibus.'
                time_limit:
                  type: integer
                  description: 'Must be at least 10.'
                  example: 57
                published_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-09-01T03:46:29'
                question_ids:
                  type: array
                  description: ''
                  example:
                    - est
                  items:
                    type: string
              required:
                - title
                - description
                - time_limit
                - published_at
                - question_ids
  '/api/v1/examinations/{id}':
    get:
      summary: 'Show single examination'
      operationId: showSingleExamination
      description: 'Allows teachers get single examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Examinations
    put:
      summary: 'Update an examination'
      operationId: updateAnExamination
      description: 'Allows teachers update their examinations and questions'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rnocnkxrrzcntljvxbgy
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Iure dolore vero accusantium eligendi.'
                time_limit:
                  type: integer
                  description: 'Must be at least 10.'
                  example: 31
                published_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-09-01T03:46:29'
                question_ids:
                  type: array
                  description: ''
                  example:
                    - cum
                  items:
                    type: string
              required:
                - title
                - description
                - time_limit
                - published_at
                - question_ids
    delete:
      summary: 'Delete an examination'
      operationId: deleteAnExamination
      description: 'Allows teachers delete their examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the examination.'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/questions:
    get:
      summary: 'get all question'
      operationId: getAllQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Examinations
    post:
      summary: 'add new question'
      operationId: addNewQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: nesciunt
                options:
                  type: object
                  description: ''
                  example: []
                  properties: []
                answers:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - description
                - options
                - answers
  '/api/v1/questions/{id}':
    put:
      summary: 'update question'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: consequatur
                options:
                  type: object
                  description: ''
                  example: []
                  properties: []
                answers:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - description
                - options
                - answers
    delete:
      summary: 'delete question'
      operationId: deleteQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the question.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination_id}/enroll':
    post:
      summary: 'Enroll student to exam'
      operationId: enrollStudentToExam
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_ids:
                  type: array
                  description: ''
                  example:
                    - laboriosam
                  items:
                    type: string
              required:
                - student_ids
    parameters:
      -
        in: path
        name: examination_id
        description: 'The ID of the examination.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/v1/students/{user_id}/exams':
    get:
      summary: 'Get all student exams'
      operationId: getAllStudentExams
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination}/questions':
    get:
      summary: 'Retrieve random questions'
      operationId: retrieveRandomQuestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: examination
        description: 'The examination.'
        example: 8
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination}/submit':
    post:
      summary: 'Handles the submission.'
      operationId: handlesTheSubmission
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  description: ''
                  example:
                    - magnam
                  items:
                    type: string
              required:
                - answers
    parameters:
      -
        in: path
        name: examination
        description: 'The examination.'
        example: 18
        required: true
        schema:
          type: integer
  /api/v1/users:
    post:
      summary: 'Create new user'
      operationId: createNewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'user full name.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'valid email.'
                  example: user@email.com
                role:
                  type: string
                  description: 'should be on of student or teacher.'
                  example: student
                password:
                  type: string
                  description: 'secured password.'
                  example: password
              required:
                - name
                - email
                - role
                - password
  '/api/v1/users/{id}':
    get:
      summary: 'Get single user'
      operationId: getSingleUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Manage User'
    put:
      summary: 'Update user record'
      operationId: updateUserRecord
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tqqghntodihfn
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: cristian92@example.com
                role:
                  type: string
                  description: 'Must be one of <code>teacher</code> or <code>student</code>.'
                  example: teacher
                password:
                  type: string
                  description: ''
                  example: totam
              required:
                - name
                - email
                - role
                - password
    delete:
      summary: 'Delete existing user record'
      operationId: deleteExistingUserRecord
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Examinations
    description: ''
  -
    name: 'Manage User'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
