openapi: 3.0.3
info:
  title: 'Laravel API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/login:
    post:
      summary: 'Request auth token'
      operationId: requestAuthToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'valid email.'
                  example: test@example.com
                password:
                  type: string
                  description: 'secured password.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/v1/user:
    get:
      summary: 'Get authenticated user.'
      operationId: getAuthenticatedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Admin User'
                    email: admin@example.com
                    email_verified_at: '2023-09-20T15:29:07.000000Z'
                    role: admin
                    created_at: '2023-09-20T15:29:07.000000Z'
                    updated_at: '2023-09-20T15:29:07.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Admin User'
                      email:
                        type: string
                        example: admin@example.com
                      email_verified_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
                      role:
                        type: string
                        example: admin
                      created_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
                      updated_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
      tags:
        - Authentication
  /api/v1/logout:
    post:
      summary: 'Destroy auth token.'
      operationId: destroyAuthToken
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Authentication
  /api/v1/examinations:
    get:
      summary: 'Get all examinations.'
      operationId: getAllExaminations
      description: '<small class="badge badge-green">Searchable</small>.'
      parameters:
        -
          in: query
          name: q
          description: 'search query.'
          example: reprehenderit
          required: false
          schema:
            type: string
            description: 'search query.'
            example: reprehenderit
        -
          in: query
          name: fields
          description: 'comma separated list of fields to search. defaults is "code,description,title"'
          example: nulla
          required: false
          schema:
            type: string
            description: 'comma separated list of fields to search. defaults is "code,description,title"'
            example: nulla
        -
          in: query
          name: sort_by
          description: 'field to sort.'
          example: cum
          required: false
          schema:
            type: string
            description: 'field to sort.'
            example: cum
        -
          in: query
          name: order
          description: "direction of sorting which can be one of:\n'a' => 'ascending' or 'd' => descending. default is 'asc'"
          example: quia
          required: false
          schema:
            type: string
            description: "direction of sorting which can be one of:\n'a' => 'ascending' or 'd' => descending. default is 'asc'"
            example: quia
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/examinations?page=1'
                    last: 'http://localhost/api/v1/examinations?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/examinations?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/examinations'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/examinations?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/examinations?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/examinations?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/examinations'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Examinations
    post:
      summary: 'Create examination.'
      operationId: createExamination
      description: 'Allows teachers to create examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jvnxnygodm
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Assumenda eligendi sed molestiae perspiciatis temporibus.'
                time_limit:
                  type: integer
                  description: 'Must be at least 10.'
                  example: 41
                published_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-09-22T03:03:52'
                question_ids:
                  type: array
                  description: ''
                  example:
                    - at
                  items:
                    type: string
              required:
                - title
                - description
                - time_limit
                - question_ids
  '/api/v1/examinations/{id}':
    get:
      summary: 'Show single examination.'
      operationId: showSingleExamination
      description: 'Allows teachers get single examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Examination] 11'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Examination] 11'
      tags:
        - Examinations
    put:
      summary: 'Update an examination.'
      operationId: updateAnExamination
      description: 'Allows teachers update their examinations and questions'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xpazpzcufomnnqjnwulvuuphe
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Aliquid aperiam sed nihil.'
                time_limit:
                  type: integer
                  description: 'Must be at least 10.'
                  example: 69
                published_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-09-22T03:03:52'
                question_ids:
                  type: array
                  description: ''
                  example:
                    - atque
                  items:
                    type: string
              required:
                - title
                - description
                - time_limit
                - question_ids
    delete:
      summary: 'Delete an examination.'
      operationId: deleteAnExamination
      description: 'Allows teachers delete their examinations'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the examination.'
        example: 11
        required: true
        schema:
          type: integer
  /api/v1/questions:
    get:
      summary: 'get all question'
      operationId: getAllQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/questions?page=1'
                    last: 'http://localhost/api/v1/questions?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/questions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/questions'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/questions?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/questions?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/questions?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/questions'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Examinations
    post:
      summary: 'add new question'
      operationId: addNewQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: soluta
                examination_id:
                  type: string
                  description: ''
                  example: null
                options:
                  type: object
                  description: ''
                  example: []
                  properties: []
                answers:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - description
                - options
                - answers
  '/api/v1/questions/{id}':
    get:
      summary: 'get single question'
      operationId: getSingleQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Question] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Question] 1'
      tags:
        - Examinations
    put:
      summary: 'update question'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: nam
                examination_id:
                  type: string
                  description: ''
                  example: null
                options:
                  type: object
                  description: ''
                  example: []
                  properties: []
                answers:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - description
                - options
                - answers
    delete:
      summary: 'delete question'
      operationId: deleteQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the question.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination_id}/enroll':
    post:
      summary: 'Enroll student to exam'
      operationId: enrollStudentToExam
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_ids:
                  type: array
                  description: ''
                  example:
                    - tempore
                  items:
                    type: string
              required:
                - student_ids
    parameters:
      -
        in: path
        name: examination_id
        description: 'The ID of the examination.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/v1/students/{user_id}/exams':
    get:
      summary: 'Get all student exams'
      operationId: getAllStudentExams
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/students/1/exams?page=1'
                    last: 'http://localhost/api/v1/students/1/exams?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/students/1/exams?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/students/1/exams'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/students/1/exams?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/students/1/exams?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/students/1/exams?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/students/1/exams'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination}/questions':
    get:
      summary: 'Retrieve random questions'
      operationId: retrieveRandomQuestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                properties:
                  data:
                    type: array
                    example: []
      tags:
        - Examinations
    parameters:
      -
        in: path
        name: examination
        description: 'The examination.'
        example: 17
        required: true
        schema:
          type: integer
  '/api/v1/examinations/{examination}/submit':
    post:
      summary: 'Handles the submission.'
      operationId: handlesTheSubmission
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  description: ''
                  example:
                    - rerum
                  items:
                    type: string
              required:
                - answers
    parameters:
      -
        in: path
        name: examination
        description: 'The examination.'
        example: 9
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'List users'
      operationId: listUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'Admin User'
                      email: admin@example.com
                      email_verified_at: '2023-09-20T15:29:07.000000Z'
                      role: admin
                      created_at: '2023-09-20T15:29:07.000000Z'
                      updated_at: '2023-09-20T15:29:07.000000Z'
                    -
                      id: 2
                      name: 'Student User'
                      email: student@example.com
                      email_verified_at: '2023-09-20T15:29:07.000000Z'
                      role: student
                      created_at: '2023-09-20T15:29:07.000000Z'
                      updated_at: '2023-09-20T15:29:07.000000Z'
                    -
                      id: 3
                      name: 'Teacher User'
                      email: teacher@example.com
                      email_verified_at: '2023-09-20T15:29:07.000000Z'
                      role: teacher
                      created_at: '2023-09-20T15:29:07.000000Z'
                      updated_at: '2023-09-20T15:29:07.000000Z'
                    -
                      id: 8
                      name: Rolandmarvin
                      email: kodekontinet@gmail.com
                      email_verified_at: null
                      role: teacher
                      created_at: '2023-09-20T15:59:39.000000Z'
                      updated_at: '2023-09-20T15:59:39.000000Z'
                    -
                      id: 10
                      name: 'Clotilde Botsford'
                      email: vicenta15@example.org
                      email_verified_at: '2023-09-21T05:42:15.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:15.000000Z'
                      updated_at: '2023-09-21T05:42:15.000000Z'
                    -
                      id: 11
                      name: 'Roberto Ward'
                      email: olson.jasper@example.net
                      email_verified_at: '2023-09-21T05:42:15.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:15.000000Z'
                      updated_at: '2023-09-21T05:42:15.000000Z'
                    -
                      id: 12
                      name: 'Maiya Stanton'
                      email: awuckert@example.org
                      email_verified_at: '2023-09-21T05:42:16.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:16.000000Z'
                      updated_at: '2023-09-21T05:42:16.000000Z'
                    -
                      id: 13
                      name: 'Prof. Margarett Corwin'
                      email: tquigley@example.net
                      email_verified_at: '2023-09-21T05:42:16.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:16.000000Z'
                      updated_at: '2023-09-21T05:42:16.000000Z'
                    -
                      id: 14
                      name: 'Trevor Thiel'
                      email: kade.swift@example.com
                      email_verified_at: '2023-09-21T05:42:16.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:16.000000Z'
                      updated_at: '2023-09-21T05:42:16.000000Z'
                    -
                      id: 15
                      name: 'Penelope Metz V'
                      email: ytoy@example.com
                      email_verified_at: '2023-09-21T05:42:16.000000Z'
                      role: null
                      created_at: '2023-09-21T05:42:16.000000Z'
                      updated_at: '2023-09-21T05:42:16.000000Z'
                  links:
                    first: 'http://localhost/api/v1/users?page=1'
                    last: 'http://localhost/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/users'
                    per_page: 15
                    to: 10
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Admin User'
                        email: admin@example.com
                        email_verified_at: '2023-09-20T15:29:07.000000Z'
                        role: admin
                        created_at: '2023-09-20T15:29:07.000000Z'
                        updated_at: '2023-09-20T15:29:07.000000Z'
                      -
                        id: 2
                        name: 'Student User'
                        email: student@example.com
                        email_verified_at: '2023-09-20T15:29:07.000000Z'
                        role: student
                        created_at: '2023-09-20T15:29:07.000000Z'
                        updated_at: '2023-09-20T15:29:07.000000Z'
                      -
                        id: 3
                        name: 'Teacher User'
                        email: teacher@example.com
                        email_verified_at: '2023-09-20T15:29:07.000000Z'
                        role: teacher
                        created_at: '2023-09-20T15:29:07.000000Z'
                        updated_at: '2023-09-20T15:29:07.000000Z'
                      -
                        id: 8
                        name: Rolandmarvin
                        email: kodekontinet@gmail.com
                        email_verified_at: null
                        role: teacher
                        created_at: '2023-09-20T15:59:39.000000Z'
                        updated_at: '2023-09-20T15:59:39.000000Z'
                      -
                        id: 10
                        name: 'Clotilde Botsford'
                        email: vicenta15@example.org
                        email_verified_at: '2023-09-21T05:42:15.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:15.000000Z'
                        updated_at: '2023-09-21T05:42:15.000000Z'
                      -
                        id: 11
                        name: 'Roberto Ward'
                        email: olson.jasper@example.net
                        email_verified_at: '2023-09-21T05:42:15.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:15.000000Z'
                        updated_at: '2023-09-21T05:42:15.000000Z'
                      -
                        id: 12
                        name: 'Maiya Stanton'
                        email: awuckert@example.org
                        email_verified_at: '2023-09-21T05:42:16.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:16.000000Z'
                        updated_at: '2023-09-21T05:42:16.000000Z'
                      -
                        id: 13
                        name: 'Prof. Margarett Corwin'
                        email: tquigley@example.net
                        email_verified_at: '2023-09-21T05:42:16.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:16.000000Z'
                        updated_at: '2023-09-21T05:42:16.000000Z'
                      -
                        id: 14
                        name: 'Trevor Thiel'
                        email: kade.swift@example.com
                        email_verified_at: '2023-09-21T05:42:16.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:16.000000Z'
                        updated_at: '2023-09-21T05:42:16.000000Z'
                      -
                        id: 15
                        name: 'Penelope Metz V'
                        email: ytoy@example.com
                        email_verified_at: '2023-09-21T05:42:16.000000Z'
                        role: null
                        created_at: '2023-09-21T05:42:16.000000Z'
                        updated_at: '2023-09-21T05:42:16.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Admin User'
                        email:
                          type: string
                          example: admin@example.com
                        email_verified_at:
                          type: string
                          example: '2023-09-20T15:29:07.000000Z'
                        role:
                          type: string
                          example: admin
                        created_at:
                          type: string
                          example: '2023-09-20T15:29:07.000000Z'
                        updated_at:
                          type: string
                          example: '2023-09-20T15:29:07.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 10
      tags:
        - 'Manage User'
    post:
      summary: 'Create new user'
      operationId: createNewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'user full name.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'valid email.'
                  example: user@email.com
                role:
                  type: string
                  description: 'should be on of student or teacher.'
                  example: student
                password:
                  type: string
                  description: 'secured password.'
                  example: password
              required:
                - name
                - email
                - role
                - password
  '/api/v1/users/{id}':
    get:
      summary: 'Get single user'
      operationId: getSingleUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Admin User'
                    email: admin@example.com
                    email_verified_at: '2023-09-20T15:29:07.000000Z'
                    role: admin
                    created_at: '2023-09-20T15:29:07.000000Z'
                    updated_at: '2023-09-20T15:29:07.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Admin User'
                      email:
                        type: string
                        example: admin@example.com
                      email_verified_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
                      role:
                        type: string
                        example: admin
                      created_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
                      updated_at:
                        type: string
                        example: '2023-09-20T15:29:07.000000Z'
      tags:
        - 'Manage User'
    put:
      summary: 'Update user record'
      operationId: updateUserRecord
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ezng
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: giovani.pagac@example.net
                role:
                  type: string
                  description: 'Must be one of <code>teacher</code> or <code>student</code>.'
                  example: student
                password:
                  type: string
                  description: ''
                  example: quidem
              required:
                - name
                - email
                - role
                - password
    delete:
      summary: 'Delete existing user record'
      operationId: deleteExistingUserRecord
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Manage User'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Examinations
    description: ''
  -
    name: 'Manage User'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
