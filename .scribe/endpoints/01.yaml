name: 'Manage User'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Manage User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create new user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'user full name.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'valid email.'
        required: true
        example: user@email.com
        type: string
        custom: []
      role:
        name: role
        description: 'should be on of student or teacher.'
        required: true
        example: student
        type: string
        custom: []
      password:
        name: password
        description: 'secured password.'
        required: true
        example: password
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: user@email.com
      role: student
      password: password
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Manage User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get single user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Manage User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user record'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tqqghntodihfn
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: cristian92@example.com
        type: string
        custom: []
      role:
        name: role
        description: 'Must be one of <code>teacher</code> or <code>student</code>.'
        required: true
        example: teacher
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: totam
        type: string
        custom: []
    cleanBodyParameters:
      name: tqqghntodihfn
      email: cristian92@example.com
      role: teacher
      password: totam
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Manage User'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing user record'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
