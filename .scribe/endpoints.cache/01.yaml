## Autogenerated by Scribe. DO NOT MODIFY.

name: Examinations
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/examinations
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all examinations'
      description: |-
        Get all examinations based on authenticated user role
        <aside class='info'>
        The examination retrieval is determined by the authenticated user's role:
        <strong>Student:</strong> Retrieve all examinations assigned to students. <br>
        <strong>Teacher:</strong> Retrieve all examinations authored by teachers.
        </aside>
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/examinations
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create examination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: nkfhuljlwhgvkuyyofz
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 5000 characters.'
        required: true
        example: 'Sint dolorem ratione provident.'
        type: string
        custom: []
      time_limit:
        name: time_limit
        description: 'Must be at least 10.'
        required: true
        example: 57
        type: integer
        custom: []
      start_time:
        name: start_time
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-29T07:44:01'
        type: string
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a date after or equal to <code>start_time</code>.'
        required: true
        example: '2056-08-22'
        type: string
        custom: []
    cleanBodyParameters:
      title: nkfhuljlwhgvkuyyofz
      description: 'Sint dolorem ratione provident.'
      time_limit: 57
      start_time: '2023-08-29T07:44:01'
      end_time: '2056-08-22'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show single examination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an examinations'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bscuvsjgmrbdhuc
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 5000 characters.'
        required: false
        example: 'Incidunt doloribus quae qui ex ut tempora vero.'
        type: string
        custom: []
      time_limit:
        name: time_limit
        description: 'Must be at least 10.'
        required: false
        example: 83
        type: integer
        custom: []
      start_time:
        name: start_time
        description: 'Must be a valid date.'
        required: false
        example: '2023-08-29T07:44:01'
        type: string
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a date after or equal to <code>start_time</code>.'
        required: false
        example: '2121-10-04'
        type: string
        custom: []
    cleanBodyParameters:
      title: bscuvsjgmrbdhuc
      description: 'Incidunt doloribus quae qui ex ut tempora vero.'
      time_limit: 83
      start_time: '2023-08-29T07:44:01'
      end_time: '2121-10-04'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy examinations'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/examinations/{examination_id}/questions'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'get all question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/examinations/{examination_id}/questions'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'add new question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: ''
        required: true
        example: sit
        type: string
        custom: []
      options:
        name: options
        description: ''
        required: true
        example:
          - tempora
        type: 'string[]'
        custom: []
      'options[].value':
        name: 'options[].value'
        description: ''
        required: true
        example: doloribus
        type: string
        custom: []
      'options[].correct':
        name: 'options[].correct'
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      description: sit
      options:
        - tempora
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/examinations/{examination_id}/questions/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'update question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      options:
        name: options
        description: ''
        required: true
        example:
          - ut
        type: 'string[]'
        custom: []
      'options[].value':
        name: 'options[].value'
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      'options[].correct':
        name: 'options[].correct'
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      description: nam
      options:
        - ut
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/examinations/{examination_id}/questions/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'delete question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/examinations/{examination_id}/start'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Start examination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/examinations/{examination_id}/submit'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handles the submission.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      answers:
        name: answers
        description: ''
        required: true
        example:
          - laudantium
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      answers:
        - laudantium
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|J10D0n2qEZA73vt6DoO856ip0rXEoPT13ZNoS3w5'
    controller: null
    method: null
    route: null
    custom: []
