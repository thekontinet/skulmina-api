## Autogenerated by Scribe. DO NOT MODIFY.

name: Examinations
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/examinations
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all examinations.'
      description: '<small class="badge badge-green">Searchable</small>.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'search query.'
        required: false
        example: reprehenderit
        type: string
        custom: []
      fields:
        name: fields
        description: 'comma separated list of fields to search. defaults is "code,description,title"'
        required: false
        example: nulla
        type: string
        custom: []
      sort_by:
        name: sort_by
        description: 'field to sort.'
        required: false
        example: cum
        type: string
        custom: []
      order:
        name: order
        description: |-
          direction of sorting which can be one of:
          'a' => 'ascending' or 'd' => descending. default is 'asc'
        required: false
        example: quia
        type: string
        custom: []
    cleanQueryParameters:
      q: reprehenderit
      fields: nulla
      sort_by: cum
      order: quia
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/examinations?page=1","last":"http:\/\/localhost\/api\/v1\/examinations?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/examinations?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/examinations","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6ZekDcvdf8VbaP5461ghEa3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/examinations
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create examination.'
      description: 'Allows teachers to create examinations'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jvnxnygodm
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 5000 characters.'
        required: true
        example: 'Assumenda eligendi sed molestiae perspiciatis temporibus.'
        type: string
        custom: []
      time_limit:
        name: time_limit
        description: 'Must be at least 10.'
        required: true
        example: 41
        type: integer
        custom: []
      published_at:
        name: published_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-09-22T03:03:52'
        type: string
        custom: []
      question_ids:
        name: question_ids
        description: ''
        required: true
        example:
          - at
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      title: jvnxnygodm
      description: 'Assumenda eligendi sed molestiae perspiciatis temporibus.'
      time_limit: 41
      published_at: '2023-09-22T03:03:52'
      question_ids:
        - at
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DacbhgZd1aEVfveP386645k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show single examination.'
      description: 'Allows teachers get single examinations'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Examination] 11"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gVkfad1bca34Z56vD8Eeh6P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an examination.'
      description: 'Allows teachers update their examinations and questions'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 14
        type: integer
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xpazpzcufomnnqjnwulvuuphe
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 5000 characters.'
        required: true
        example: 'Aliquid aperiam sed nihil.'
        type: string
        custom: []
      time_limit:
        name: time_limit
        description: 'Must be at least 10.'
        required: true
        example: 69
        type: integer
        custom: []
      published_at:
        name: published_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-09-22T03:03:52'
        type: string
        custom: []
      question_ids:
        name: question_ids
        description: ''
        required: true
        example:
          - atque
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      title: xpazpzcufomnnqjnwulvuuphe
      description: 'Aliquid aperiam sed nihil.'
      time_limit: 69
      published_at: '2023-09-22T03:03:52'
      question_ids:
        - atque
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ebc8k6h43dVv56Z1aagPefD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/examinations/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an examination.'
      description: 'Allows teachers delete their examinations'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examination.'
        required: true
        example: 17
        type: integer
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d614PaV6E3gfehZbvD5k8ca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/questions
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'get all question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/questions?page=1","last":"http:\/\/localhost\/api\/v1\/questions?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/questions?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/questions","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer daEe5Z6h836Vgk4fvD1bPac'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/questions
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'add new question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: ''
        required: true
        example: soluta
        type: string
        custom: []
      examination_id:
        name: examination_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      options:
        name: options
        description: ''
        required: true
        example: []
        type: object
        custom: []
      answers:
        name: answers
        description: ''
        required: true
        example: []
        type: object
        custom: []
    cleanBodyParameters:
      description: soluta
      options: []
      answers: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k8Vvafe3g4h6Dd5Za6cEbP1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/questions/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'get single question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Question] 1"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d86a15g63bfckPZVDavh4eE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/questions/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'update question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      examination_id:
        name: examination_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      options:
        name: options
        description: ''
        required: true
        example: []
        type: object
        custom: []
      answers:
        name: answers
        description: ''
        required: true
        example: []
        type: object
        custom: []
    cleanBodyParameters:
      description: nam
      options: []
      answers: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hV8g4DZve6af5E6dkc13Pab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/questions/{id}'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: 'Manage Questions'
      subgroupDescription: ''
      title: 'delete question'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the question.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZDa51b6V634agePvck8hdEf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/examinations/{examination_id}/enroll'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Enroll student to exam'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination_id:
        name: examination_id
        description: 'The ID of the examination.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      examination_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_ids:
        name: student_ids
        description: ''
        required: true
        example:
          - tempore
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      student_ids:
        - tempore
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3b4VdkEfDZ66gaae518cvhP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/students/{user_id}/exams'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all student exams'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/students\/1\/exams?page=1","last":"http:\/\/localhost\/api\/v1\/students\/1\/exams?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/students\/1\/exams?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/students\/1\/exams","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kbav1eV8cEPhgDZd3f465a6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/examinations/{examination}/questions'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve random questions'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination:
        name: examination
        description: 'The examination.'
        required: true
        example: 17
        type: integer
        custom: []
    cleanUrlParameters:
      examination: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1436cZ6E5vgbDhfedka8aVP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/examinations/{examination}/submit'
    metadata:
      groupName: Examinations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handles the submission.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      examination:
        name: examination
        description: 'The examination.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      examination: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      answers:
        name: answers
        description: ''
        required: true
        example:
          - rerum
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      answers:
        - rerum
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8vc6bfg3kVadE4D6hea1P5Z'
    controller: null
    method: null
    route: null
    custom: []
